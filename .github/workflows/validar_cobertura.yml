---
name: Validar pruebas unitarias
on:
    pull_request:
      branches:
        - develop
      types: 
        - synchronize
        - opened
        - edited
jobs:
    correr-pruebas-personas:
        name: Correr pruebas personas
        runs-on: ubuntu-latest
        steps:
        - name: Checkout del repositorio
          uses: actions/checkout@v2
        - name: Configuración de entorno python
          uses: actions/setup-python@v2
          with:
            python-version: '3.11'
        - name: Instalación de liberías y dependencias
          run: |
            pip install pipenv
            cd personas
            pipenv install --system --deploy
        - name: Autenticación de Google
          id: auth
          uses: google-github-actions/auth@v2
          with:
            credentials_json: '${{ secrets.GCP_SA_STORAGE_KEY }}'
        - name: Correr pruebas
          run: pytest personas/test -v --cov=. --cov-fail-under=80
        - name: Validar resultado con errores
          if: ${{ failure() }}
          env:
            MENSAJE_ERROR: Una o varias pruebas fallaron
          run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
        - name: Validar resultado sin errores
          if: ${{ success() }}
          env:
            MENSAJE_EXITO: Todas las pruebas fueron exitosas
          run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"

    correr-pruebas-administracion:
      name: Correr pruebas administracion
      runs-on: ubuntu-latest
      steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración de entorno python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Instalación de liberías y dependencias
        run: |
          pip install pipenv
          cd administracion
          ls -la
          pipenv install --system --deploy
      - name: Autenticación de Google
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_STORAGE_KEY }}'
      - name: Correr pruebas
        run: pytest administracion/test -v --cov=. --cov-fail-under=80
      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"

    correr-pruebas-deporte:
      name: Correr pruebas deporte
      runs-on: ubuntu-latest
      steps:
        - name: Checkout del repositorio
          uses: actions/checkout@v2
        - name: Configuración de entorno python
          uses: actions/setup-python@v2
          with:
            python-version: '3.11'
        - name: Instalación de liberías y dependencias
          run: |
            pip install pipenv
            cd deporte
            ls -la
            pipenv install --system --deploy
        - name: Autenticación de Google
          id: auth
          uses: google-github-actions/auth@v2
          with:
            credentials_json: '${{ secrets.GCP_SA_STORAGE_KEY }}'
        - name: Correr pruebas
          run: pytest deporte/test -v --cov=. --cov-fail-under=80
        - name: Validar resultado con errores
          if: ${{ failure() }}
          env:
            MENSAJE_ERROR: Una o varias pruebas fallaron
          run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
        - name: Validar resultado sin errores
          if: ${{ success() }}
          env:
            MENSAJE_EXITO: Todas las pruebas fueron exitosas
          run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"